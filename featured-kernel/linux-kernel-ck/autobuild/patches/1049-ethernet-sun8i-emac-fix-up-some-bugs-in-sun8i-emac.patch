From 49a499beb692ff685ef5b234dc3b61f963f73f9d Mon Sep 17 00:00:00 2001
From: Icenowy Zheng <icenowy@aosc.io>
Date: Sat, 22 Apr 2017 03:18:35 +0800
Subject: [PATCH 49/69] ethernet: sun8i-emac: fix up some bugs in sun8i-emac

There's now several bugs found in sun8i-emac:

- After the PHY regulator is opened, the driver didn't wait for it to
  init. I did a temporary 500ms sleep for it.
- The MDIO write logic is totally mess -- I used the logic from
  stmmac_mdio.c to fix it

Signed-off-by: Icenowy Zheng <icenowy@aosc.io>
---
 drivers/net/ethernet/allwinner/sun8i-emac.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/allwinner/sun8i-emac.c b/drivers/net/ethernet/allwinner/sun8i-emac.c
index a9f69e1ed167..7c9eed67bc2a 100644
--- a/drivers/net/ethernet/allwinner/sun8i-emac.c
+++ b/drivers/net/ethernet/allwinner/sun8i-emac.c
@@ -882,6 +882,8 @@ static int sun8i_mdio_write(struct mii_bus *bus, int phy_addr, int phy_reg,
 		return err;
 	}
 
+	reg = MDIO_CMD_MII_BUSY;
+
 	reg &= ~MDIO_CMD_MII_PHY_REG_ADDR_MASK;
 	reg |= (phy_reg << MDIO_CMD_MII_PHY_REG_ADDR_SHIFT) &
 		MDIO_CMD_MII_PHY_REG_ADDR_MASK;
@@ -891,10 +893,9 @@ static int sun8i_mdio_write(struct mii_bus *bus, int phy_addr, int phy_reg,
 		MDIO_CMD_MII_PHY_ADDR_MASK;
 
 	reg |= MDIO_CMD_MII_WRITE;
-	reg |= MDIO_CMD_MII_BUSY;
 
-	writel(reg, priv->base + EMAC_MDIO_CMD);
 	writel(data, priv->base + EMAC_MDIO_DATA);
+	writel(reg, priv->base + EMAC_MDIO_CMD);
 
 	err = readl_poll_timeout(priv->base + EMAC_MDIO_CMD, reg,
 				 !(reg & MDIO_CMD_MII_BUSY), 100, 10000);
@@ -1161,6 +1162,9 @@ static int sun8i_emac_power(struct net_device *ndev)
 		ret = regulator_enable(priv->regulator);
 		if (ret)
 			goto err_regulator;
+
+		/* Sleep a period of time, to make the PHY to get ready */
+		msleep(500);
 	}
 
 	return 0;
-- 
2.12.2

