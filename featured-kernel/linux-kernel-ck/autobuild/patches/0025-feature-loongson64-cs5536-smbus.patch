From 8a577fd32524c1c4220e19b9b8166ac48db68cd0 Mon Sep 17 00:00:00 2001
From: Jiaxun Yang <jiaxun.yang@flygoat.com>
Date: Wed, 8 Nov 2017 17:55:19 +0800
Subject: [PATCH 3/3] MIPS: Loongson64: introuduce cs5536 SMBus read/write
 operation Add SMBus I/O SPACE and cs5536_smb_wait() cs5526_smb_read_single(),
 cs5536_smb_write_single() functions

Signed-off-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
---
 .../include/asm/mach-loongson64/cs5536/cs5536.h    |   1 +
 .../asm/mach-loongson64/cs5536/cs5536_smb.h        |  62 ++++++++++++
 arch/mips/loongson64/common/cs5536/Makefile        |   2 +-
 arch/mips/loongson64/common/cs5536/cs5536_smb.c    | 108 +++++++++++++++++++++
 4 files changed, 172 insertions(+), 1 deletion(-)
 create mode 100644 arch/mips/include/asm/mach-loongson64/cs5536/cs5536_smb.h
 create mode 100644 arch/mips/loongson64/common/cs5536/cs5536_smb.c

diff --git a/arch/mips/include/asm/mach-loongson64/cs5536/cs5536.h b/arch/mips/include/asm/mach-loongson64/cs5536/cs5536.h
index a0ee0cb775ad..cce0ac5846c7 100644
--- a/arch/mips/include/asm/mach-loongson64/cs5536/cs5536.h
+++ b/arch/mips/include/asm/mach-loongson64/cs5536/cs5536.h
@@ -301,5 +301,6 @@ extern void _wrmsr(u32 msr, u32 hi, u32 lo);
 /* GPIO : I/O SPACE; REG : 32BITS */
 #define GPIOL_OUT_VAL		0x00
 #define GPIOL_OUT_EN		0x04
+#define GPIOL_OUT_AUX1_SEL  0x10
 
 #endif				/* _CS5536_H */
diff --git a/arch/mips/include/asm/mach-loongson64/cs5536/cs5536_smb.h b/arch/mips/include/asm/mach-loongson64/cs5536/cs5536_smb.h
new file mode 100644
index 000000000000..029044d4653d
--- /dev/null
+++ b/arch/mips/include/asm/mach-loongson64/cs5536/cs5536_smb.h
@@ -0,0 +1,62 @@
+/*
+ * The header file of cs5536 SMBus control.
+ *
+ * Copyright (C) 2017 Jiaxun Yang.
+ * Author : Jiaxun Yang <jiaxun.yang@flygoat.com>
+ */
+
+#ifndef _CS5536_SMB_H
+#define _CS5536_SMB_H
+
+#include <linux/types.h>
+
+/*
+* SMBus I/O SPACE
+*/
+
+static u32 smb_base;
+
+#define SMB_SDA 0x00
+#define SMB_STS 0x01
+#define SMB_STS_SLVSTP (0x01 << 7)
+#define SMB_STS_SDAST (0x01 << 6)
+#define SMB_STS_BER (0x01 << 5)
+#define SMB_STS_NEGACK (0x01 << 4)
+#define SMB_STS_STASTR (0x01 << 3)
+#define SMB_STS_NMATCH (0x01 << 2)
+#define SMB_STS_MASTER (0x01 << 1)
+#define SMB_STS_XMIT (0x01 << 0)
+
+#define SMB_CTRL_STS 0x02
+#define SMB_CSTS_TGSCL (0x01 << 5)
+#define SMB_CSTS_TSDA (0x01 << 4)
+#define SMB_CSTS_GCMTCH (0x01 << 3)
+#define SMB_CSTS_MATCH (0x01 << 2)
+#define SMB_CSTS_BB (0x01 << 1)
+#define SMB_CSTS_BUSY (0x01 << 0)
+
+#define SMB_CTRL1 0x03
+#define SMB_CTRL1_STASTRE (0x01 << 7)
+#define SMB_CTRL1_NMINTE (0x01 << 6)
+#define SMB_CTRL1_GCMEN (0x01 << 5)
+#define SMB_CTRL1_ACK (0x01 << 4)
+#define SMB_CTRL1_RSVD (0x01 << 3)
+#define SMB_CTRL1_INTEN (0x01 << 2)
+#define SMB_CTRL1_STOP (0x01 << 1)
+#define SMB_CTRL1_START (0x01 << 0)
+
+#define SMB_ADD 0x04
+#define SMB_ADD_SAEN (0x01 << 7)
+
+#define SMB_CTRL2 0x05
+#define SMB_CTRL2_ENABLE (0x01 << 0)
+
+#define SMB_CTRL3 0x06
+
+extern int cs5536_smb_wait(void);
+
+extern void cs5526_smb_read_single(int addr, int regNo, char *value);
+
+extern void cs5536_smb_write_single(int addr, int regNo, char value);
+
+#endif /*!_CS5536_MFGPT_H */
diff --git a/arch/mips/loongson64/common/cs5536/Makefile b/arch/mips/loongson64/common/cs5536/Makefile
index f12e64007347..e66f80db10a0 100644
--- a/arch/mips/loongson64/common/cs5536/Makefile
+++ b/arch/mips/loongson64/common/cs5536/Makefile
@@ -3,7 +3,7 @@
 #
 
 obj-$(CONFIG_CS5536) += cs5536_pci.o cs5536_ide.o cs5536_acc.o cs5536_ohci.o \
-			cs5536_isa.o cs5536_ehci.o
+			cs5536_isa.o cs5536_ehci.o cs5536_smb.o
 
 #
 # Enable cs5536 mfgpt Timer
diff --git a/arch/mips/loongson64/common/cs5536/cs5536_smb.c b/arch/mips/loongson64/common/cs5536/cs5536_smb.c
new file mode 100644
index 000000000000..1f1ec8755fe5
--- /dev/null
+++ b/arch/mips/loongson64/common/cs5536/cs5536_smb.c
@@ -0,0 +1,108 @@
+/*
+ * read/write operation to the CS5536 SMbus
+ *
+ * Copyright (C) 2017 Jiaxun Yang.
+ * Author : Jiaxun Yang, jiaxun.yang@flygoat.com
+ *
+ * This program is free software; you can redistribute	it and/or modify it
+ * under  the terms of	the GNU General	 Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+#include <linux/types.h>
+#include <linux/delay.h>
+
+#include <asm/io.h>
+
+#include <cs5536/cs5536.h>
+#include <cs5536/cs5536_smb.h>
+
+int cs5536_smb_wait(void)
+{
+    char c;
+    int i;
+
+    udelay(1000);
+    for (i = 0; i < 20; i++)
+    {
+        c = inb(smb_base | SMB_STS);
+        if (c & (SMB_STS_BER | SMB_STS_NEGACK))
+            return -1;
+        if (c & SMB_STS_SDAST)
+            return 0;
+        udelay(100);
+    }
+    return -2;
+}
+
+void cs5526_smb_read_single(int addr, int regNo, char *value)
+{
+    unsigned char c;
+
+    /* Start condition */
+    c = inb(smb_base | SMB_CTRL1);
+    outb(c | SMB_CTRL1_START, smb_base | SMB_CTRL1);
+    cs5536_smb_wait();
+
+    /* Send slave address */
+    outb(addr & 0xfe, smb_base | SMB_SDA);
+    cs5536_smb_wait();
+
+    /* Acknowledge smbus */
+    c = inb(smb_base | SMB_CTRL1);
+    outb(c | SMB_CTRL1_ACK, smb_base | SMB_CTRL1);
+
+    /* Send register index */
+    outb(regNo, smb_base | SMB_SDA);
+    cs5536_smb_wait();
+
+    /* Acknowledge smbus */
+    c = inb(smb_base | SMB_CTRL1);
+    outb(c | SMB_CTRL1_ACK, smb_base | SMB_CTRL1);
+
+    /* Start condition again */
+    c = inb(smb_base | SMB_CTRL1);
+    outb(c | SMB_CTRL1_START, smb_base | SMB_CTRL1);
+    cs5536_smb_wait();
+
+    /* Send salve address again */
+    outb(1 | addr, smb_base | SMB_SDA);
+    cs5536_smb_wait();
+
+    /* Acknowledge smbus */
+    c = inb(smb_base | SMB_CTRL1);
+    outb(c | SMB_CTRL1_ACK, smb_base | SMB_CTRL1);
+
+    /* Read data */
+    *value = inb(smb_base | SMB_SDA);
+
+    /* Stop condition */
+    outb(SMB_CTRL1_STOP, smb_base | SMB_CTRL1);
+    cs5536_smb_wait();
+    }
+
+void cs5536_smb_write_single(int addr, int regNo, char value)
+{
+    unsigned char c;
+
+    /* Start condition */
+    c = inb(smb_base | SMB_CTRL1);
+    outb(c | SMB_CTRL1_START, smb_base | SMB_CTRL1);
+    cs5536_smb_wait();
+    /* Send slave address */
+    outb(addr & 0xfe, smb_base | SMB_SDA);
+    cs5536_smb_wait();
+    ;
+
+    /* Send register index */
+    outb(regNo, smb_base | SMB_SDA);
+    cs5536_smb_wait();
+
+    /* Write data */
+    outb(value, smb_base | SMB_SDA);
+    cs5536_smb_wait();
+    /* Stop condition */
+    outb(SMB_CTRL1_STOP, smb_base | SMB_CTRL1);
+    cs5536_smb_wait();
+}
-- 
2.14.1

