diff -Naur linux-4.10.1/drivers/net/wireless/marvell/mwifiex/cfg80211.c linux-4.10.1.mwifi/drivers/net/wireless/marvell/mwifiex/cfg80211.c
--- linux-4.10.1/drivers/net/wireless/marvell/mwifiex/cfg80211.c	2017-02-26 04:09:33.000000000 -0600
+++ linux-4.10.1.mwifi/drivers/net/wireless/marvell/mwifiex/cfg80211.c	2017-03-05 23:07:22.193886693 -0600
@@ -417,6 +417,8 @@
 			    "info: ignore timeout value for IEEE Power Save\n");
 
 	ps_mode = enabled;
+mwifiex_dbg(priv->adapter, ERROR, "jpw: hacking ps_mode to false\n");
+	ps_mode = 0;
 
 	return mwifiex_drv_set_power(priv, &ps_mode);
 }
diff -Naur linux-4.10.1/drivers/net/wireless/marvell/mwifiex/pcie.c linux-4.10.1.mwifi/drivers/net/wireless/marvell/mwifiex/pcie.c
--- linux-4.10.1/drivers/net/wireless/marvell/mwifiex/pcie.c	2017-02-26 04:09:33.000000000 -0600
+++ linux-4.10.1.mwifi/drivers/net/wireless/marvell/mwifiex/pcie.c	2017-03-05 23:10:09.571219105 -0600
@@ -498,6 +498,8 @@
  */
 static int mwifiex_pcie_disable_host_int(struct mwifiex_adapter *adapter)
 {
+//	mwifiex_dbg(adapter, ERROR,
+//				    "disable_host_int");
 	if (mwifiex_pcie_ok_to_access_hw(adapter)) {
 		if (mwifiex_write_reg(adapter, PCIE_HOST_INT_MASK,
 				      0x00000000)) {
@@ -533,6 +535,9 @@
 			return -1;
 		}
 	}
+	else
+		mwifiex_dbg(adapter, ERROR,
+			    "Did NOT really disable host interrupt.\n");
 
 	return 0;
 }
@@ -1680,6 +1685,9 @@
 
 	mwifiex_dbg(adapter, CMD,
 		    "info: Rx CMD Response\n");
+//	mwifiex_dbg(adapter, ERROR,
+//		    "jpw: %s skb %p, skb->len %d, skb->data_len %d, skb->head %p, skb->data %p, skb->tail %d, skb->end %d\n",
+//                  __func__, skb, skb->len, skb->data_len, skb->head, skb->data, skb->tail, skb->end);
 
 	mwifiex_unmap_pci_memory(adapter, skb, PCI_DMA_FROMDEVICE);
 
@@ -1692,6 +1700,13 @@
 
 	pkt_len = *((__le16 *)skb->data);
 	rx_len = le16_to_cpu(pkt_len);
+	if (rx_len == 0) {
+		mwifiex_dbg(adapter, ERROR,
+				"0 byte cmdrsp\n");
+		mwifiex_map_pci_memory(adapter, skb, MWIFIEX_UPLD_SIZE,
+					PCI_DMA_FROMDEVICE);
+		return 0;
+	}
 	skb_put(skb, MWIFIEX_UPLD_SIZE - skb->len);
 	skb_trim(skb, rx_len);
 	skb_pull(skb, INTF_HEADER_LEN);
@@ -1759,6 +1774,9 @@
 	struct pcie_service_card *card = adapter->card;
 
 	if (skb) {
+//	mwifiex_dbg(adapter, ERROR,
+//		    "jpw: %s skb %p, skb->len %d, skb->data_len %d, skb->head %p, skb->data %p, skb->tail %d, skb->end %d\n",
+//                   __func__, skb, skb->len, skb->data_len, skb->head, skb->data, skb->tail, skb->end);
 		card->cmdrsp_buf = skb;
 		skb_push(card->cmdrsp_buf, INTF_HEADER_LEN);
 		if (mwifiex_map_pci_memory(adapter, skb, MWIFIEX_UPLD_SIZE,
@@ -2298,6 +2316,7 @@
 	}
 	adapter->int_status = 0;
 	spin_unlock_irqrestore(&adapter->int_lock, flags);
+	mwifiex_dbg(adapter, INTR, "popped ireg: 0x%08x\n", pcie_ireg);
 
 	if (card->msi_enable) {
 		if (mwifiex_pcie_ok_to_access_hw(adapter)) {
@@ -2347,6 +2409,7 @@
 	spin_unlock_irqrestore(&adapter->int_lock, flags);
 	mwifiex_dbg(adapter, INTR, "popped ireg: 0x%08x\n", pcie_ireg);
 
 	if (card->msi_enable) {
+#if defined(JPW_EXPERIMENT_1)
 		if (mwifiex_pcie_ok_to_access_hw(adapter)) {
 			if (mwifiex_read_reg(adapter, PCIE_HOST_INT_STATUS,
@@ -2397,6 +2416,7 @@
 			adapter->int_status = 0;
 			spin_unlock_irqrestore(&adapter->int_lock, flags);
 		}
+#endif
 	}
 	mwifiex_dbg(adapter, INTR,
 		    "info: cmd_sent=%d data_sent=%d\n",
diff -Naur linux-4.10.1/drivers/net/wireless/marvell/mwifiex/sta_cmd.c linux-4.10.1.mwifi/drivers/net/wireless/marvell/mwifiex/sta_cmd.c
--- linux-4.10.1/drivers/net/wireless/marvell/mwifiex/sta_cmd.c	2017-02-26 04:09:33.000000000 -0600
+++ linux-4.10.1.mwifi/drivers/net/wireless/marvell/mwifiex/sta_cmd.c	2017-03-05 23:07:22.197220041 -0600
@@ -2303,7 +2303,7 @@
 		if (ret)
 			return -1;
 
-		if (priv->bss_type != MWIFIEX_BSS_TYPE_UAP) {
+		if (0 && priv->bss_type != MWIFIEX_BSS_TYPE_UAP) {
 			/* Enable IEEE PS by default */
 			priv->adapter->ps_mode = MWIFIEX_802_11_POWER_MODE_PSP;
 			ret = mwifiex_send_cmd(priv,
@@ -2359,7 +2359,7 @@
 	if (ret)
 		return -1;
 
-	if (!disable_auto_ds &&
+	if (0 && !disable_auto_ds &&
 	    first_sta && priv->adapter->iface_type != MWIFIEX_USB &&
 	    priv->bss_type != MWIFIEX_BSS_TYPE_UAP) {
 		/* Enable auto deep sleep */
diff -Naur linux-4.10.1/drivers/net/wireless/marvell/mwifiex/util.c linux-4.10.1.mwifi/drivers/net/wireless/marvell/mwifiex/util.c
--- linux-4.10.1/drivers/net/wireless/marvell/mwifiex/util.c	2017-02-26 04:09:33.000000000 -0600
+++ linux-4.10.1.mwifi/drivers/net/wireless/marvell/mwifiex/util.c	2017-03-05 23:07:22.197220041 -0600
@@ -407,8 +407,11 @@
 	u16 pkt_len;
 	struct ieee80211_hdr *ieee_hdr;
 
-	if (!skb)
+	if (!skb) {
+		mwifiex_dbg(priv->adapter, ERROR,
+			    "no skb");
 		return -1;
+	}
 
 	if (!priv->mgmt_frame_mask ||
 	    priv->wdev.iftype == NL80211_IFTYPE_UNSPECIFIED) {
